1) I want a c# console application that represents a robotic agent. The agent has an id and a name. The agent has a status (idle, active, offline), a location, battery level and can perform activities. I would like to track of all the activities history as well as the current task. I want to know the health metrics and sensors data too.
This data should be simulated initially (I am planning on improving on this later). I want the agent to be able to provide real time updates using web sockets for status and location using web sockets (or any other suitable technology, like gRPC perhaps?).
The robot should be capable of storing inspection data and logs using a noSQL database, please provide an abstraction for that.

2) I have a dashboard application that display the status data for each robotic agent and send commands to specific robot(s). Write an API to serve this application. Updates for the front-end should come via signalR. Use ASP.Net stack.

3) I am implementing an application where I have multiple users and groups, each with their own group and role as below. 

“The supported roles ares:
Admin - can see all bots (including their statuses, battery levels, current and past activities, can send command to all of them, can manage users. A command is issued by a user. Commands are tracked and stored somewhere for auditing purposes. Admin users have full access to the audit list.
Managing users means add/remove users, move a user from a group to another, amend user details.

Normal user (can see only bots belonging to their own group). A group can have one more or agent fleet(s). Normal users do NOT have access to the audit of the group. Can send commands to an agent/fleet. Normal users have access to each bots data metric.

Group manager: can do everything that a normal user is capable of doing plus it can assign/revoke view rights to specific guest users. This means one or more metric can be seen by the target user. They can also see the audit trail of a group.

Guest, can be granted read-only access to one and one only fleet at a given time. They cannot see audit, no data other than bot id, location, and current activity can be accessed by default. They can be granted access to specific metrics by the group manager. The access lasts as long as the group manager decides for it to be (= no time).

Each user as an id a full name and email, a groupId.”

Help me cleaning up the model and highlight any potential issues with that.

4) Help me setting up a blank Angular project using Angular Material, Jest, Nx, NgRx, Storybook and Cypress

5) I want a c# console application that represent an agent called "anymal". Each agent has an id, a name and an initial battery level of 100. 
Every 10 seconds the battery level decreses by 1 until it reaches zero. I want to be able to register this agent with an API using gRPC and I want to communicate every time the battery decreases as well. I also want to send a message when the battery level finally reaches 0.

The api should be able to track in memory the details of each connected agent and expose an endpoint to retrieve all agents and an agent
given its id. Please use ASP.Net Core web api for the API. I want the API to log on the console every event that it receives from the anymal agents.

6) Now I want the agent name to be configurable via command line option

7) Let's introduce the Status property to an agent. The possible values are: Unavailable, and Active (which is the default value).
When the battery level reaches 0 then set the status to Unavailable. Make sure we have a way to notify the API when status goes to 
Unavailable via gRPC. Additionally I want the controller to return a more restricted model for an agent that only exposes the id, name, status and battery level.

8) I want to be able to recharge the agent's battery to its full level. I want to do so from the api via a post method accepting the id of the agent to recharge

9) I want to introduce 2 new endpoints that can be invoked via the API: Shutdown & Wakeup.
When Shutdown is invoked the agent status transitions to "Offline" and it should stop sending the updates for battery level.
When Wakeup is invoked the agent status goes back to "Active" unless the battery level is 0. In this case it stays Unavailable.
When going back to the Active status it should also start sending the updates for battery level.
If an agent is Offline then it should also ignore the Recharge requests

10) I need to expose a signalR endpoint to stream all the agents data to a front-end app. I need to get data in the shape of the AgentDto class. 
Also create a basic angular material app that shows this data.

I'd like to have more space between the cards and for the cards to be placed inside a container so that I have more space on the left and right. Also put a slight hover effect on the cards themselves.

11) Show me how can I run multiple agents from a single command line prompt by passing a json file. The file contains the name of the agents. 
Gimme 10 agents with randomised name please.

12) I'd like to extend the app by allowing the Recharge, Shutdown, Wakeup actions to be executed via web. I want the fetch api to be used.
The api url is https://localhost:7272. Please encapsulate all network calls into a dedicated service. 

13) I want to be able to perform a search by id or name. I want the component to be displayed on top of the agents components. I also want this component to be always visible no matter how many agent cards are displayed (i.e. if there are vertical scrollbars)

TODO
====
14) ANYmal details view

15) NgRx

16) It should be possible to record the commands history. Use known framework

17) Nx